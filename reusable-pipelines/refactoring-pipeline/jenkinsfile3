pipeline {
    agent any

    tools {
        maven 'Maven_3.9.6' // Make sure this name matches in Jenkins tool config
    }

    parameters {
        booleanParam(name: 'RELEASE', defaultValue: false, description: 'Is this a Release Candidate?')
    }

    environment {
        RELEASE_VERSION = '1.1.0'
        INT_VERSION     = 'R2'
    }

    stages {
        stage('Audit tools') {
            steps {
                bat '''
                    git --version
                    java -version
                    mvn --version
                '''
            }
        }

        stage('Unit Test') {
            steps {
                dir('java-tomcat-sample') {
                    bat '''
                        echo ==== Running Unit Tests ====
                        mvn test
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    def versionSuffix = params.RELEASE ?
                        "${env.RELEASE_VERSION}-${env.BUILD_NUMBER}" :
                        "${env.INT_VERSION}ci-${env.BUILD_NUMBER}"

                    echo "Building version: ${versionSuffix}"

                    dir('java-tomcat-sample') {
                        bat "mvn versions:set -DnewVersion=${versionSuffix}-SNAPSHOT"
                        bat "mvn versions:update-child-modules"
                        bat "mvn clean package"
                    }
                }
            }
        }

        stage('Publish') {
            // when {
            //     expression { params.RELEASE }
            // }
            steps {
                // Optional: List files in the target directory to debug
                bat 'dir java-tomcat-sample\\target'

                // Archive WAR file
                archiveArtifacts artifacts: 'java-tomcat-sample/target/*.war', fingerprint: true
            }
        }
    }

    // post {
    //     always {
    //         cleanWs()
    //     }
    // }
}
