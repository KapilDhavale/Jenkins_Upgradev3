pipeline {
    agent any

    tools {
        maven 'Maven_3.9.6'
    }

    parameters {
        booleanParam(name: 'RELEASE', defaultValue: false, description: 'Is this a Release Candidate?')
    }

    environment {
        RELEASE_VERSION = '1.1.0'
        INT_VERSION     = 'R2'
    }

    stages {
        stage('Audit tools') {
            steps {
                script {
                    auditTools()
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    runUnitTests()
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    def versionSuffix = getBuildVersion()
                    echo "ðŸ“¦ Building version: ${versionSuffix}"
                    buildApplication(versionSuffix)
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    publishArtifacts()
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}

def auditTools() {
    bat '''
        git --version
        java -version
        mvn --version
    '''
}

def runUnitTests() {
    dir('java-tomcat-sample') {
        bat '''
            echo ==== Running Unit Tests ====
            mvn test
        '''
    }
}

def getBuildVersion() {
    return params.RELEASE ?
        "${env.RELEASE_VERSION}-${env.BUILD_NUMBER}" :
        "${env.INT_VERSION}ci-${env.BUILD_NUMBER}"
}

def buildApplication(versionSuffix) {
    dir('java-tomcat-sample') {
        bat "mvn versions:set -DnewVersion=${versionSuffix}-SNAPSHOT"
        bat "mvn versions:update-child-modules"
        bat "mvn clean package"
    }
}

def publishArtifacts() {
    bat 'dir java-tomcat-sample\\target'
    archiveArtifacts artifacts: 'java-tomcat-sample/target/*.war', fingerprint: true
}
