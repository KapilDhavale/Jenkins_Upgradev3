pipeline {
    agent any

    parameters {
        booleanParam(name: 'RELEASE', defaultValue: false, description: 'Is this a Release Candidate?')
    }

    tools {
        maven 'Maven_3.9.6'  // if youâ€™re using the Global Tool Config for Maven
    }

    environment {
        RELEASE_VERSION = '1.1.0'
        INT_VERSION     = 'R2'
        // Compute VERSION_SUFFIX via Groovy string interpolation:
        VERSION_SUFFIX  = "${params.RELEASE ? \"${env.RELEASE_VERSION}:${env.BUILD_NUMBER}\" : \"${env.INT_VERSION}ci:${env.BUILD_NUMBER}\"}"
    }

    stages {
        stage('Audit tools') {
            steps {
                bat """
                    git --version
                    java -version
                    mvn --version
                """
            }
        }

        stage('Unit Test') {
            steps {
                dir('java-tomcat-sample') {
                    bat """
                        echo Executing Unit Tests...
                        mvn test
                    """
                }
            }
        }

        stage('Build') {
            steps {
                echo "Building version suffix: ${VERSION_SUFFIX}"
                dir('java-tomcat-sample') {
                    bat """
                        mvn versions:set -DnewVersion=${VERSION_SUFFIX}-SNAPSHOT
                        mvn versions:update-child-modules
                        mvn clean package
                    """
                }
            }
        }

        stage('Publish') {
            when {
                expression { return params.RELEASE }
            }
            steps {
                echo 'Publishing WAR artifact...'
                // archives all WARs in the workspace
                archiveArtifacts artifacts: '**/*.war', fingerprint: true
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
